#===================================================================================
# https://github.com/ccccmagicboy/MicroPython_fw_action
# Description: Build MicroPython firmware using GitHub Actions for Javascript (node.js)
# Lisence: MIT
# Author: ccccmagicboy
# Url: https://ccrobot-online.com
#===================================================================================

name: Javascript_BUILD

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    paths:
    - '.github/workflows/build_for_JS.yml'
    - '!**.md'
  schedule:
    - cron: 0 9 * * *
  # watch:
    # types: [started]
    
# ┌───────────── minute (0 - 59)
# │ ┌───────────── hour (0 - 23)
# │ │ ┌───────────── day of the month (1 - 31)
# │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
# │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
# │ │ │ │ │                                   
# │ │ │ │ │
# │ │ │ │ │
# * * * * *  

env:
  REPO_URL: https://github.com/micropython/micropython.git
  REPO_BRANCH: master
  CUSTOM_MPCONFIGPORT: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-16.04

    steps:
    - name: Checkout this repos
      uses: actions/checkout@v2
      
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
        
    - name: Get the python3
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'        
      
    - name: Install the depend
      run: |
        sudo apt-get install libc6-dev
        sudo apt install libc6-dev-i386
        sudo apt-get install make unrar-free autoconf automake libtool gcc g++ gperf \
        flex bison texinfo gawk ncurses-dev libexpat-dev python-dev sed git unzip \
        bash help2man wget bzip2 libtool-bin python-serial
        npm install uglify-js -g
      
    - name: Clone the micropython source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH my_micropython
        git submodule update --init
        
    # - name: Clone the ulab external c modules
      # working-directory: ./c_modules
      # run: |
        # git clone https://github.com/v923z/micropython-ulab.git ulab
        # mkdir -p ./JS/ulab
        # cp -R ./ulab/code/. ./JS/ulab
        # ls -al ./JS/ulab    
        
    - name: Build the mpy-cross tool
      working-directory: ./my_micropython/mpy-cross
      run: |
        make        

    - name: Build the unix port
      id: unix_port
      run: |
        cd my_micropython/ports/unix
        make submodules
        make
        find . -name "*micropython*"
        MOREF=$(./micropython -c "import sys;print('v{0:d}_{1:d}'.format(sys.implementation[1][0], sys.implementation[1][1]))")
        echo $MOREF
        echo "::set-output name=version::$MOREF"
        echo "::set-output name=board::${{ matrix.test-board }}"        
        
    - name: Clone the emsdk
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh
        
    - name: Build the mpy-cross tool
      working-directory: ./my_micropython/mpy-cross
      run: |
        make     
        
    # - name: Custom the mpconfigport.h file
      # if: env.CUSTOM_MPCONFIGPORT == 'true'
      # working-directory: ./my_micropython/ports/javascript/
      # run: |
        # echo "#define MODULE_ULAB_ENABLED (1)" >> mpconfigport.h
        # echo "#define MODULE_EXAMPLE_ENABLED (1)" >> mpconfigport.h            
      
    - name: Fix a bug
      working-directory: ./
      run: |
        python -c "import os;from tools.mpy_cross_win_tool import replaceAll;mk_path = os.path.join(os.getcwd(), 'my_micropython', 'ports', 'javascript', 'Makefile');print(mk_path);replaceAll(mk_path, '-s \"BINARYEN_TRAP_MODE=\'clamp\'\"', '-s USE_SDL=2')"
        
    - name: Build the javascript port
      working-directory: ./my_micropython/ports/javascript
      run: |
        source ../../../emsdk/emsdk_env.sh
        make min
        ls ./build -al
        
    - name: Get the datetime
      id: get_datetime
      uses: ccccmagicboy/get_datetime@master
      with:
        tz1: 'Asia'
        tz2: 'Shanghai'        
                
    - name: Zip the artifact
      run: |
        zip --junk-paths Micropython_js_min_${{ steps.unix_port.outputs.version }}_${{ steps.get_datetime.outputs.datetime_str }} my_micropython/ports/javascript/build/micropython.min.js my_micropython/ports/javascript/build/firmware.wasm README.md MicroPython_fw_action_card.png        
        
    - name: Upload the zip file
      uses: actions/upload-artifact@master
      with:
        name: Micropython_js_min_${{ steps.unix_port.outputs.version }}_${{ steps.get_datetime.outputs.datetime_str }}
        path: Micropython_js_min_${{ steps.unix_port.outputs.version }}_${{ steps.get_datetime.outputs.datetime_str }}.zip        
        
        
        