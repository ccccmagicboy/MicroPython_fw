#===================================================================================
# https://github.com/ccccmagicboy/MicroPython_fw_action
# Description: Build MicroPython docs using GitHub Actions
# Lisence: MIT
# Author: ccccmagicboy
# Url: https://ccrobot-online.com
#===================================================================================

name: DOC_BUILD

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    paths:
    - '.github/workflows/build_docs.yml'
    - '!**.md'
  schedule:
    - cron: 0 8 * * *
  # watch:
    # types: [started]
    
# ┌───────────── minute (0 - 59)
# │ ┌───────────── hour (0 - 23)
# │ │ ┌───────────── day of the month (1 - 31)
# │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
# │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
# │ │ │ │ │                                   
# │ │ │ │ │
# │ │ │ │ │
# * * * * *  

env:
  REPO_URL: https://github.com/micropython/micropython.git
  REPO_BRANCH: master
  CUSTOM_MPCONFIGPORT: true

jobs:
  build:
    name: Build MicroPython docs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repos
      uses: actions/checkout@v2
        
    - name: Get the python3
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'        
      
    - name: Install the depend
      run: |
        sudo apt-get install texlive-latex-recommended texlive-latex-extra
        sudo apt install latexmk
        pip install sphinx
        pip install groundwork-sphinx-theme
      
    - name: Clone the micropython source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH my_micropython
        git submodule update --init
        
    - name: Build the mpy-cross tool
      working-directory: ./my_micropython/mpy-cross
      run: |
        make        

    - name: Build the unix port
      id: unix_port
      run: |
        cd my_micropython/ports/unix
        make submodules
        make
        find . -name "*micropython*"
        MOREF=$(./micropython -c "import sys;print('v{0:d}_{1:d}'.format(sys.implementation[1][0], sys.implementation[1][1]))")
        echo $MOREF
        echo "::set-output name=version::$MOREF"
        echo "::set-output name=board::${{ matrix.test-board }}"      
        echo "::set-output name=gitid::$(git rev-parse --short HEAD)"
        
    - name: Config the theme
      run: |
        cp ./tools/conf.py ./my_micropython/docs/conf.py
        
    - name: Build the doc
      working-directory: ./my_micropython/docs
      run: |
        make html
        ls ./build/html -al
        
    - name: Get the datetime
      id: get_datetime
      uses: ccccmagicboy/get_datetime@master
      with:
        tz1: 'Asia'
        tz2: 'Shanghai'        
                
    - name: Zip the artifact
      run: |
        zip -r Micropython_docs_${{ steps.unix_port.outputs.version }}_${{ steps.unix_port.outputs.gitid }}_${{ steps.get_datetime.outputs.datetime_str }} ./my_micropython/docs/build/html README.md MicroPython_fw_action_card.png        
        
    - name: Upload the zip file
      uses: actions/upload-artifact@master
      with:
        name: Micropython_docs_${{ steps.unix_port.outputs.version }}_${{ steps.unix_port.outputs.gitid }}_${{ steps.get_datetime.outputs.datetime_str }}
        path: Micropython_docs_${{ steps.unix_port.outputs.version }}_${{ steps.unix_port.outputs.gitid }}_${{ steps.get_datetime.outputs.datetime_str }}.zip        
        
  build_1:
    name: Build IDF docs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repos
      uses: actions/checkout@v2
        
    - name: Get the python3
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'        
      
    - name: Install the depend
      run: |
        sudo apt-get install texlive-latex-recommended texlive-latex-extra
        sudo apt install latexmk
        pip install sphinx
        pip install groundwork-sphinx-theme

    - name: Clone the source code and build the docs
      id: build_doc
      run: |
        git clone https://github.com/espressif/esp-idf.git esp-idf
        cd esp-idf/docs
        export IDF_PATH=/home/runner/work/MicroPython_fw_action/MicroPython_fw_action/esp-idf
        ./build_docs.py -t esp32 -l en build
        ./build_docs.py -t esp32 -l zh_CN build
        ls ./build/html -al
        echo "::set-output name=gitid::$(git rev-parse --short HEAD)"
        
    - name: Get the datetime
      id: get_datetime
      uses: ccccmagicboy/get_datetime@master
      with:
        tz1: 'Asia'
        tz2: 'Shanghai'        
                
    - name: Zip the artifact
      run: |
        zip -r IDF_docs_${{ steps.build_doc.outputs.gitid }}_${{ steps.get_datetime.outputs.datetime_str }} ./esp-idf/docs/build/html README.md MicroPython_fw_action_card.png
        
    - name: Upload the zip file
      uses: actions/upload-artifact@master
      with:
        name: IDF_docs_${{ steps.build_doc.outputs.gitid }}_${{ steps.get_datetime.outputs.datetime_str }}
        path: IDF_docs_${{ steps.build_doc.outputs.gitid }}_${{ steps.get_datetime.outputs.datetime_str }}.zip         
        
        
        