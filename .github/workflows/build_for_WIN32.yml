#===================================================================================
# https://github.com/ccccmagicboy/MicroPython_fw_action
# Description: Build MicroPython firmware using GitHub Actions for x86
# Lisence: MIT
# Author: ccccmagicboy
# Url: https://ccrobot-online.com
#===================================================================================

name: x86_BUILD

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    paths:
    - '.github/workflows/build_for_WIN32.yml'
    - '!**.md'
  schedule:
    - cron: 0 8 * * *
  # watch:
    # types: [started]
    
# ┌───────────── minute (0 - 59)
# │ ┌───────────── hour (0 - 23)
# │ │ ┌───────────── day of the month (1 - 31)
# │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
# │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
# │ │ │ │ │                                   
# │ │ │ │ │
# │ │ │ │ │
# * * * * *  

env:
  REPO_URL: https://github.com/micropython/micropython.git
  REPO_BRANCH: master
  DIY_C_MODULES: true

jobs:
  build:
    name: Build Windows and Linux
    runs-on: ubuntu-16.04

    steps:
    - name: Checkout this repos
      uses: actions/checkout@v2    
      
    - name: Install the toolchain
      run: |
        sudo apt-get install gcc      
        sudo apt-get install gcc-mingw-w64
        sudo apt-get install libc6-dev
        pip3 --version        
        pip3 install --upgrade pip
        pip3 install pyelftools
      
    - name: Clone the micropython source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH my_micropython
        git submodule update --init
        
    - name: Build the mpy-cross tool
      run: |
        cd my_micropython
        pwd
        ls -al
        make -C mpy-cross
        
    - name: Get the datetime
      id: get_datetime
      uses: ccccmagicboy/get_datetime@master
      with:
        tz1: 'Asia'
        tz2: 'Shanghai'        
        
    - name: Build the linux port
      run: |
        cd my_micropython/ports/unix
        make submodules
        make
        find . -name "*micropython*"
        MOREF=$(./micropython -c "import sys;print('v{0:d}_{1:d}'.format(sys.implementation[1][0], sys.implementation[1][1]))")
        
    - name: Zip the artifact
      run: |
        zip --junk-paths Micropython_amd64_linux_${{ steps.get_datetime.outputs.datetime_str }} my_micropython/ports/unix/micropython README.md MicroPython_fw_action_card.png        
        
    - name: Upload the zip file
      uses: actions/upload-artifact@master
      with:
        name: Micropython_amd64_linux_${{ steps.get_datetime.outputs.datetime_str }}
        path: Micropython_amd64_linux_${{ steps.get_datetime.outputs.datetime_str }}.zip        
        
    - name: Build the Windows port
      run: |        
        cd my_micropython/ports/windows/
        pwd
        ls -al
        make CROSS_COMPILE=i686-w64-mingw32-
        ls -al
        
    - name: Zip the artifact
      run: |
        zip --junk-paths Micropython_x86_windows_${{ steps.get_datetime.outputs.datetime_str }} my_micropython/ports/windows/micropython.exe README.md MicroPython_fw_action_card.png        
        
    - name: Upload the zip file
      uses: actions/upload-artifact@master
      with:
        name: Micropython_x86_windows_${{ steps.get_datetime.outputs.datetime_str }}
        path: Micropython_x86_windows_${{ steps.get_datetime.outputs.datetime_str }}.zip
        
    - name: DIY c mpy modules
      if: env.DIY_C_MODULES == 'true'
      working-directory: ./c_modules/
      run: |
        cd ./Universal/factorial
        make ARCH=x86
        ls -al
        
    - name: Upload c mpy file
      if: env.DIY_C_MODULES == 'true'    
      uses: actions/upload-artifact@master
      with:
        name: factorial
        path: c_modules/Universal/factorial/factorial.mpy    
            
  build_1:
    name: Build MACOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout this repos
      uses: actions/checkout@v2
      
    - name: Install depends
      run: |
        brew install libffi
        brew install pkgconfig
      
    - name: Clone the micropython source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH my_micropython
        git submodule update --init
        
    - name: Build the mpy-cross tool
      run: |
        cd my_micropython
        pwd
        ls -al
        make -C mpy-cross
        
    - name: Get the datetime
      id: get_datetime
      uses: ccccmagicboy/get_datetime@master
      with:
        tz1: 'Asia'
        tz2: 'Shanghai'
        
    - name: Build the macos port
      run: |
        export PKG_CONFIG_PATH=/usr/local/Cellar/libffi/3.2.1/lib/pkgconfig/
        cd my_micropython/ports/unix
        make submodules
        make axtls
        make
        find . -name "*micropython*"
        MOREF=$(./micropython -c "import sys;print('v{0:d}_{1:d}'.format(sys.implementation[1][0], sys.implementation[1][1]))")
        
    - name: Do a test
      working-directory: ./my_micropython/tests
      run: |
        ./run-tests
        
    - name: Zip the artifact
      run: |
        zip --junk-paths Micropython_macos_catalina_${{ steps.get_datetime.outputs.datetime_str }} my_micropython/ports/unix/micropython README.md MicroPython_fw_action_card.png        
        
    - name: Upload the zip file
      uses: actions/upload-artifact@master
      with:
        name: Micropython_macos_catalina_${{ steps.get_datetime.outputs.datetime_str }}
        path: Micropython_macos_catalina_${{ steps.get_datetime.outputs.datetime_str }}.zip   

        
