#===================================================================================
# https://github.com/ccccmagicboy/MicroPython_fw_action
# Description: Build MicroPython firmware using GitHub Actions for PYBV11
# Lisence: MIT
# Author: ccccmagicboy
# Url: https://ccrobot-online.com
#===================================================================================

name: ESP8266_BUILD

on:
  release:
    types: [published]
  push:
    branches:
      - master
  # schedule:
    # - cron: 0 8 * * 5
  # watch:
    # types: [started]

env:
  REPO_URL: https://github.com/micropython/micropython.git
  REPO_BRANCH: master
  TOOLCHAIN_REPO_URL: https://github.com/pfalcon/esp-open-sdk.git
  TOOLCHAIN_REPO_BRANCH: master  
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-16.04

    steps:
    - name: Checkout this repos
      uses: actions/checkout@v2    
      
    - name: Install require for toolchain
      run: |
        sudo apt-get install make unrar-free autoconf automake libtool gcc g++ gperf \
        flex bison texinfo gawk ncurses-dev libexpat-dev python-dev sed git unzip \
        bash help2man wget bzip2 libtool-bin

    - name: Clone the toolchain source code
      run: git clone --recursive $TOOLCHAIN_REPO_URL -b $TOOLCHAIN_REPO_BRANCH my_toolchain

    - name: Build the toolchain and install it
      run: |
        cd my_toolchain
        ls -al
        make
        ls -al
        export PATH=/home/runner/work/MicroPython_fw_action/MicroPython_fw_action/my_toolchain/xtensa-lx106-elf/bin:$PATH
        xtensa-lx106-elf-gcc --version
      
    - name: Clone the micropython source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH my_micropython
        git submodule update --init
        
    - name: Build the mpy-cross tool
      run: |
        cd my_micropython
        pwd
        ls -al
        make -C mpy-cross
        
    - name: Build the unix port
      run: |
        cd my_micropython/ports/unix
        make submodules
        make
        find . -name "*micropython*"
        ./micropython -c "import sys;print(sys.implementation)"
        
    - name: Build the ESP8266 port
      run: |        
        cd my_micropython/ports/esp8266/
        pwd
        ls -al
        make
        ls -al
        
    - name: Zip the artifact
      run: |
        zip --junk-paths firmware_ESP8266 my_micropython/ports/esp8266/build-GENERIC/firmware-combined.bin README.md MicroPython_fw_action_card.png
        
    - name: Upload the zip file
      uses: actions/upload-artifact@master
      with:
        name: firmware_ESP8266
        path: my_micropython/firmware_ESP8266.zip
            