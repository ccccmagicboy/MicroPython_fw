#===================================================================================
# https://github.com/ccccmagicboy/MicroPython_fw_action
# Description: Build MicroPython firmware using GitHub Actions for ESP32
# Lisence: MIT
# Author: ccccmagicboy
# Url: https://ccrobot-online.com
#===================================================================================

name: ESP32_BUILD

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    paths-ignore:
    - '**.md'      
  # schedule:
    # - cron: 0 8 * * 5
  # watch:
    # types: [started]

env:
  REPO_URL: https://github.com/micropython/micropython.git
  REPO_BRANCH: master
  TOOLCHAIN_FROM_SCRATCH: false
  TZ: Asia/Shanghai
  DIY_MPY_MODULES: true
  DIY_C_MODULES: true
  BOARD: GENERIC
  IDF_VERSION_V3: true
  IDF_VERSION_V4: true
  
jobs:
  build:
    runs-on: ubuntu-16.04

    steps:
    - name: Checkout this repos
      uses: actions/checkout@v2    

    - name: Install require for toolchain
      run: |
        sudo apt-get install gcc git wget make libncurses-dev flex \
        bison gperf python python-pip python-setuptools \
        python-cryptography python-future
        pip install --upgrade pip
        pip install pyserial 'pyparsing<2.4'
        
    - name: Down and install the toolchain
      if: env.TOOLCHAIN_FROM_SCRATCH == 'false'
      run: |
        mkdir -p my_toolchain
        cd my_toolchain
        curl -O https://dl.espressif.com/dl/xtensa-esp32-elf-linux64-1.22.0-80-g6c4433a-5.2.0.tar.gz
        tar -xzf xtensa-esp32-elf-linux64-1.22.0-80-g6c4433a-5.2.0.tar.gz
        rm xtensa-esp32-elf-linux64-1.22.0-80-g6c4433a-5.2.0.tar.gz
        export PATH=/home/runner/work/MicroPython_fw_action/MicroPython_fw_action/my_toolchain/xtensa-esp32-elf/bin:$PATH
        xtensa-esp32-elf-gcc --version
        
    - name: Clone the micropython source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH my_micropython
        git submodule update --init
        
    - name: Build the mpy-cross tool
      run: |
        cd my_micropython
        pwd
        ls -al
        make -C mpy-cross
        
    - name: Build the unix port
      run: |
        cd my_micropython/ports/unix
        make submodules
        make
        find . -name "*micropython*"
        ./micropython -c "import sys;print(sys.implementation)"

    - name: Get the IDF git hash of the only version(two of them)
      id: get_hash
      uses: ccccmagicboy/FW_esp32_get_IDF_hash_action@master
      with: 
        test: hahahaaaaa
        
    - name: Print the hashs
      run: |
        echo ${{ steps.get_hash.outputs.test_out }} 
        echo ${{ steps.get_hash.outputs.hash_v3 }} 
        echo ${{ steps.get_hash.outputs.hash_v4 }} 
        
    - name: Download the IDF v3 from espressif and make the esp32 port
      if: env.IDF_VERSION_V3 == 'true'
      run: |
        git clone https://github.com/espressif/esp-idf.git
        cd esp-idf
        git checkout ${{ steps.get_hash.outputs.hash_v3 }}
        git submodule update --init --recursive
        cd ..
        ls -l